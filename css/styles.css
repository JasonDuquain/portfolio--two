:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  scroll-behavior: smooth;
  --navheight: 0;
}

*, ::before, ::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
  outline: none;
}

body {
  font-size: 100%;
  font-family: 'Roboto', sans-serif;
  line-height: 1.45;
  /* this is from the 1.25 type scale */
  color: #6e6e6e;
}

a {
  color: inherit;
}

/* less vivid red for active links */
a:active {
  color: #bf2b58;
}

/***** type-scale ratio 1.25 *****/
h1, h2, h3, h4 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 400;
  line-height: 1.15;
}

p {
  margin-bottom: 1.25em;
}

h1 {
  font-size: 3.052em;
}

h2 {
  font-size: 2.441em;
}

h3 {
  font-size: 1.953em;
}

h4 {
  font-size: 1.563em;
}

h5 {
  font-size: 1.25em;
}

small, .text_small {
  font-size: 0.8em;
}

.nav {
  padding: 1rem 2rem;
  -webkit-box-shadow: 1px 1px 3px 0 rgba(56, 52, 75, 0.5), -1px 0 3px 0 rgba(56, 52, 75, 0.5);
          box-shadow: 1px 1px 3px 0 rgba(56, 52, 75, 0.5), -1px 0 3px 0 rgba(56, 52, 75, 0.5);
  background-color: rgba(255, 255, 255, 0.85);
  -webkit-transform-origin: top center;
          transform-origin: top center;
  -webkit-transition: -webkit-transform 900ms ease-out;
  transition: -webkit-transform 900ms ease-out;
  transition: transform 900ms ease-out;
  transition: transform 900ms ease-out, -webkit-transform 900ms ease-out;
  -webkit-transform: perspective(525px) rotateX(0deg);
          transform: perspective(525px) rotateX(0deg);
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 500;
}

.nav.is--scrolling {
  -webkit-transform: perspective(525px) rotateX(-140deg);
          transform: perspective(525px) rotateX(-140deg);
}

.nav__list {
  max-width: 1280px;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.nav__logo {
  width: 50px;
  height: auto;
  display: block;
}

.nav__link {
  text-transform: uppercase;
  position: relative;
  padding-bottom: .25em;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.nav__link:hover, .nav__link:focus {
  color: #38344b;
}

.nav__link::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  right: 50%;
  height: 2px;
  background-color: #38344b;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.nav__link:hover::after, .nav__link:focus::after {
  left: 0;
  right: 0;
}

.header {
  padding: 6rem 2rem;
  overflow: hidden;
  /* no need to use calc and multiply times 1px as the getPropertyValue pull the px */
  margin-top: var(--navheight);
}

.header__grid {
  max-width: 1280px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  visibility: hidden;
}

.header__heading {
  color: #020203;
  text-transform: uppercase;
  padding: 1em 0;
  background-image: url(../img/brush.png);
  background-repeat: no-repeat;
  background-position: bottom;
  margin-bottom: 2em;
}

.header__heading-one {
  display: block;
  font-weight: 200;
  position: relative;
}

.header__heading-one::before {
  content: "";
  position: absolute;
  background-color: #fff;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  -webkit-transform-origin: 100% 0;
          transform-origin: 100% 0;
}

.header__heading-two {
  display: block;
  font-weight: 700;
  position: relative;
}

.header__heading-two::before {
  content: "";
  position: absolute;
  background-color: #fff;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  -webkit-transform-origin: 100% 0;
          transform-origin: 100% 0;
}

.header__summary {
  font-size: 1.375em;
  margin-bottom: .75em;
  font-weight: 300;
}

.header__button {
  display: inline-block;
  margin-top: 4em;
  text-transform: uppercase;
  padding: .75em 1.25em;
  background-color: #38344b;
  color: #fff;
  font-size: 1.25em;
  font-weight: 700;
  border-radius: 99em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 12em;
  -webkit-transition: background-color 350ms ease-in;
  transition: background-color 350ms ease-in;
}

.header__button:hover, .header__button:focus {
  background-color: #5a5478;
}

.header__svg {
  width: 1.2em;
  height: 1.2em;
  fill: #fff;
  margin-left: .5em;
  -webkit-transform: translateY(-1px);
          transform: translateY(-1px);
}

.header__image {
  width: 100%;
  /* temporary -- just resize actual img if needed */
  -webkit-transform: scale(1.15);
          transform: scale(1.15);
  -webkit-transform-origin: top;
          transform-origin: top;
  height: auto;
  display: block;
  position: relative;
  z-index: 100;
}

.intro {
  padding: 25rem 2rem 25rem 2rem;
  background-color: #38344b;
  -webkit-transform: skewY(-15deg);
          transform: skewY(-15deg);
  /* having animation issues when putting this on intro__grid */
  overflow: hidden;
}

.intro > * {
  -webkit-transform: skewY(15deg);
          transform: skewY(15deg);
}

.intro__grid {
  display: grid;
  grid-template-columns: .7fr 1fr;
  grid-column-gap: 2em;
  max-width: 1280px;
  margin: 0 auto;
}

.intro__image {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.intro__grid-cell--two {
  margin-left: 10em;
}

.intro__grid-cell_wrap {
  position: relative;
  padding-bottom: 4rem;
}

.intro__ampersand {
  font-family: 'Parisienne', cursive;
  font-size: 20em;
  line-height: .7;
  opacity: .4;
}

.intro__beauty {
  margin-top: 0;
  color: #fff;
  font-weight: 200;
  text-transform: uppercase;
  position: absolute;
  top: 50%;
  /* disabled as am using a fromTo */
}

.intro__usability {
  color: #fff;
  font-weight: 700;
  text-transform: uppercase;
  position: absolute;
  /* disabled as am using a fromTo */
}

.intro__summary {
  line-height: 2;
  font-size: 1.375em;
  margin: 3em 0;
  font-weight: 300;
  color: #ccd6e0;
  width: 80%;
}

.intro__sect {
  display: grid;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  grid-gap: 1.5em 2em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.intro__sect:not(:last-of-type) {
  margin-bottom: 1.25em;
}

.intro__circle {
  width: 5em;
  height: 5em;
  background-color: #000;
  border-radius: 50%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.intro__svg {
  width: 3em;
  height: 3em;
}

.intro__svg--one {
  fill: #6cc0e4;
}

.intro__svg--two {
  fill: #d1ff38;
}

.intro__svg--three {
  width: 2.5em;
  height: 2.5em;
  fill: #f5477e;
}

.intro__heading {
  color: #fff;
  text-transform: uppercase;
  font-weight: 600;
}

.about {
  padding: 20rem 2rem;
  max-width: 1280px;
  margin: 0 auto;
  /*
    &__progress > li:after {
        position: absolute;
        content: attr(data-percent);
        width: 100%;
        top: 3.7rem;
        left: 0;
        font-size: 2rem;
        text-align: center;
    }
    */
}

.about__ampersand {
  color: #38344b;
}

.about__beauty {
  color: #020203;
}

.about__usability {
  color: #020203;
}

.about__wrap {
  margin-top: 8rem;
}

.about__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
}

.about__link {
  display: inline-block;
  position: relative;
  font-family: 'Montserrat', sans-serif;
  color: #020203;
  font-size: 1.953em;
  font-weight: 200;
  text-transform: uppercase;
}

.about__link::after {
  position: absolute;
  content: "";
  left: 50%;
  right: 50%;
  bottom: 0;
  height: 1px;
  background-color: currentColor;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.about__link:hover::after {
  left: 0;
  right: 0;
}

.about__link--current {
  color: red;
}

.about__sect {
  display: none;
}

.about__sect--visible {
  display: block;
}

.about__progress {
  position: relative;
  display: inline-block;
  padding: 0;
  text-align: center;
}

.about__progress > li {
  font-family: Lato;
  color: #93A2AC;
  font-weight: 100;
  display: inline-block;
  position: relative;
  text-align: center;
  margin: 2em;
}

.about__progress > li:before {
  font-weight: 400;
  position: absolute;
  content: attr(data-name);
  width: 100%;
  bottom: -2rem;
}

.about [class*=percent] {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.about__progress svg {
  width: 10rem;
  height: 10rem;
}

.about__progress svg:nth-child(2) {
  position: absolute;
  left: 0;
  top: 0;
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
}

.about__progress svg:nth-child(2) path {
  fill: none;
  stroke-width: 25;
  stroke-dasharray: 629;
  stroke: rgba(255, 255, 255, 0.9);
  -webkit-animation: load 2000ms linear;
          animation: load 2000ms linear;
}

@-webkit-keyframes load {
  0% {
    stroke-dashoffset: 0;
  }
}

@keyframes load {
  0% {
    stroke-dashoffset: 0;
  }
}

.projects {
  padding: 800px 0;
}

.skew {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  -webkit-transform: skewY(-15deg);
          transform: skewY(-15deg);
}

.skew__cell {
  padding: 10em 2em;
  color: #fff;
  text-align: center;
}

.skew__cell > * {
  /* issues with skewing the grid or the cells */
  -webkit-transform: skewY(15deg);
          transform: skewY(15deg);
}

.skew__cell--one {
  background-color: #e93f4b;
}

.skew__cell--two {
  background-color: #2d2e2f;
}

.skew__cell--three {
  background-color: #38344b;
}

.skew__circle {
  width: 5em;
  height: 5em;
  background-color: #000;
  border-radius: 50%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 0 auto 2em auto;
}

.skew__svg {
  width: 2.5em;
  height: 2.5em;
  fill: #fff;
}

.skew__icon {
  -webkit-transform: translateY(100px) skewY(15deg);
          transform: translateY(100px) skewY(15deg);
}

.skew__heading {
  color: #fff;
  text-transform: uppercase;
  font-weight: 600;
  margin-bottom: .75em;
}

.skew__summary {
  line-height: 2;
  font-size: 1.375em;
  margin: 1em 0;
  font-weight: 300;
  color: #fff;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
