:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  scroll-behavior: smooth;
  --navheight: 10px;
}

*, ::before, ::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
  outline: none;
}

body {
  font-size: 100%;
  font-family: 'Roboto', sans-serif;
  line-height: 1.45;
  /* this is from the 1.25 type scale */
  color: #6e6e6e;
}

a {
  color: inherit;
}

/* less vivid red for active links */
a:active {
  color: #bf2b58;
}

/***** type-scale ratio 1.25 *****/
h1, h2, h3, h4 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 400;
  line-height: 1.15;
}

p {
  margin-bottom: 1.25em;
}

h1 {
  font-size: 3.052em;
}

h2 {
  font-size: 2.441em;
}

h3 {
  font-size: 1.953em;
}

h4 {
  font-size: 1.563em;
}

h5 {
  font-size: 1.25em;
}

small, .text_small {
  font-size: 0.8em;
}

.nav {
  padding: 1rem 2rem;
  -webkit-box-shadow: 1px 1px 3px 0 rgba(56, 52, 75, 0.5), -1px 0 3px 0 rgba(56, 52, 75, 0.5);
          box-shadow: 1px 1px 3px 0 rgba(56, 52, 75, 0.5), -1px 0 3px 0 rgba(56, 52, 75, 0.5);
  background-color: rgba(255, 255, 255, 0.85);
  -webkit-transform-origin: top center;
          transform-origin: top center;
  -webkit-transition: -webkit-transform 900ms ease-out;
  transition: -webkit-transform 900ms ease-out;
  transition: transform 900ms ease-out;
  transition: transform 900ms ease-out, -webkit-transform 900ms ease-out;
  -webkit-transform: perspective(525px) rotateX(0deg);
          transform: perspective(525px) rotateX(0deg);
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 500;
}

.nav.is--scrolling {
  -webkit-transform: perspective(525px) rotateX(-140deg);
          transform: perspective(525px) rotateX(-140deg);
}

.nav__list {
  max-width: 1280px;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.nav__logo {
  width: 50px;
  height: auto;
  display: block;
}

.nav__link {
  text-transform: uppercase;
  position: relative;
  padding-bottom: .25em;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.nav__link:hover, .nav__link:focus {
  color: #38344b;
}

.nav__link::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  right: 50%;
  height: 2px;
  background-color: #38344b;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.nav__link:hover::after, .nav__link:focus::after {
  left: 0;
  right: 0;
}

.header {
  padding: 6rem 2rem;
  overflow: hidden;
  /* no need to use calc and multiply times 1px as the getPropertyValue pull the px */
  margin-top: var(--navheight);
}

.header__grid {
  max-width: 1280px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  visibility: hidden;
}

.header__heading {
  color: #020203;
  text-transform: uppercase;
  padding: 1em 0;
  background-image: url(../img/brush.png);
  background-repeat: no-repeat;
  background-position: bottom;
  margin-bottom: 2em;
}

.header__heading-one {
  display: block;
  font-weight: 200;
  position: relative;
}

.header__heading-one::before {
  content: "";
  position: absolute;
  background-color: #fff;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  -webkit-transform-origin: 100% 0;
          transform-origin: 100% 0;
}

.header__heading-two {
  display: block;
  font-weight: 700;
  position: relative;
}

.header__heading-two::before {
  content: "";
  position: absolute;
  background-color: #fff;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  -webkit-transform-origin: 100% 0;
          transform-origin: 100% 0;
}

.header__summary {
  font-size: 1.375em;
  margin-bottom: .75em;
  font-weight: 300;
}

.header__button {
  display: inline-block;
  margin-top: 4em;
  text-transform: uppercase;
  padding: .75em 1.25em;
  background-color: #38344b;
  color: #fff;
  font-size: 1.25em;
  font-weight: 700;
  border-radius: 99em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 12em;
  -webkit-transition: background-color 350ms ease-in;
  transition: background-color 350ms ease-in;
}

.header__button:hover, .header__button:focus {
  background-color: #5a5478;
}

.header__svg {
  width: 1.2em;
  height: 1.2em;
  fill: #fff;
  margin-left: .5em;
  -webkit-transform: translateY(-1px);
          transform: translateY(-1px);
}

.header__image {
  width: 100%;
  /* temporary -- just resize actual img if needed */
  -webkit-transform: scale(1.15);
          transform: scale(1.15);
  -webkit-transform-origin: top;
          transform-origin: top;
  height: auto;
  display: block;
  position: relative;
  z-index: 100;
}

.intro {
  padding: 25rem 2rem 25rem 2rem;
  background-color: #38344b;
  -webkit-transform: skewY(-15deg);
          transform: skewY(-15deg);
  /* having animation issues when putting this on intro__grid */
  overflow: hidden;
}

.intro > * {
  -webkit-transform: skewY(15deg);
          transform: skewY(15deg);
}

.intro__grid {
  display: grid;
  grid-template-columns: .7fr 1fr;
  grid-column-gap: 2em;
  max-width: 1280px;
  margin: 0 auto;
}

.intro__image {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.intro__grid-cell--two {
  margin-left: 10em;
}

.intro__grid-cell_wrap {
  position: relative;
  padding-bottom: 4rem;
}

.intro__ampersand {
  font-family: 'Parisienne', cursive;
  font-size: 20em;
  line-height: .7;
  opacity: .4;
}

.intro__beauty {
  margin-top: 0;
  color: #fff;
  font-weight: 200;
  text-transform: uppercase;
  position: absolute;
  top: 50%;
  /* disabled as am using a fromTo */
}

.intro__usability {
  color: #fff;
  font-weight: 700;
  text-transform: uppercase;
  position: absolute;
  /* disabled as am using a fromTo */
}

.intro__summary {
  line-height: 2;
  font-size: 1.375em;
  margin: 3em 0;
  font-weight: 300;
  color: #ccd6e0;
  width: 80%;
}

.intro__sect {
  display: grid;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  grid-gap: 1.5em 2em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.intro__sect:not(:last-of-type) {
  margin-bottom: 1.25em;
}

.intro__circle {
  width: 5em;
  height: 5em;
  background-color: #000;
  border-radius: 50%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.intro__svg {
  width: 3em;
  height: 3em;
}

.intro__svg--one {
  fill: #6cc0e4;
}

.intro__svg--two {
  fill: #d1ff38;
}

.intro__svg--three {
  width: 2.5em;
  height: 2.5em;
  fill: #f5477e;
}

.intro__heading {
  color: #fff;
  text-transform: uppercase;
  font-weight: 600;
}

.about {
  padding: 20rem 2rem;
  max-width: 1280px;
  margin: 0 auto 10rem auto;
  /*
    &__progress > li:after {
        position: absolute;
        content: attr(data-percent);
        width: 100%;
        top: 3.7rem;
        left: 0;
        font-size: 2rem;
        text-align: center;
    }
    */
}

.about__ampersand {
  color: #38344b;
  opacity: .25;
}

.about__beauty {
  color: #020203;
  font-weight: 700;
}

.about__usability {
  color: #020203;
  font-weight: 200;
}

.about__wrap {
  margin-top: 8rem;
}

.about__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  padding: 1.5rem 0;
  background-color: #38344b;
}

.about__link {
  display: inline-block;
  position: relative;
  font-family: 'Montserrat', sans-serif;
  color: #fff;
  font-size: 1.953em;
  font-weight: 200;
  text-transform: uppercase;
}

.about__link::after {
  position: absolute;
  content: "";
  left: 50%;
  right: 50%;
  bottom: 0;
  height: 1px;
  background-color: currentColor;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.about__link:active {
  color: #6cc0e4;
}

.about__link:hover::after {
  left: 0;
  right: 0;
}

.about__link--current {
  color: #6cc0e4;
}

.about__link--current::after {
  position: absolute;
  content: "";
  left: 0;
  right: 0;
  bottom: 0;
  height: 1px;
  background-color: currentColor;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.about__sect-wrap {
  padding: 2rem;
  border: 1px solid #38344b;
}

.about__sect {
  display: none;
}

.about__sect--visible {
  display: block;
}

.about__progress {
  position: relative;
  display: inline-block;
  padding: 0;
  text-align: center;
  width: 100%;
  margin: 0 auto;
}

.about__progress > li {
  font-family: Lato;
  color: #93A2AC;
  font-weight: 100;
  display: inline-block;
  position: relative;
  text-align: center;
  margin: 2em;
}

.about__progress > li:before {
  font-size: 1.25em;
  color: #38344b;
  font-weight: 400;
  position: absolute;
  content: attr(data-name);
  width: 100%;
  bottom: -3rem;
}

.about [class*=percent] {
  font-size: 1.25em;
  color: #38344b;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.about__progress svg {
  width: 10rem;
  height: 10rem;
}

.about__progress svg:nth-child(2) {
  position: absolute;
  left: 0;
  top: 0;
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
}

.about__progress svg:nth-child(2) path {
  fill: none;
  stroke-width: 25;
  stroke-dasharray: 629;
  stroke: rgba(255, 255, 255, 0.9);
  -webkit-animation: load 2000ms linear;
          animation: load 2000ms linear;
}

@-webkit-keyframes load {
  0% {
    stroke-dashoffset: 0;
  }
}

@keyframes load {
  0% {
    stroke-dashoffset: 0;
  }
}

.skew {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  -webkit-transform: skewY(-15deg);
          transform: skewY(-15deg);
}

.skew__cell {
  padding: 10em 2em;
  color: #fff;
  text-align: center;
}

.skew__cell > * {
  /* issues with skewing the grid or the cells */
  -webkit-transform: skewY(15deg);
          transform: skewY(15deg);
}

.skew__cell--one {
  background-color: #e93f4b;
}

.skew__cell--two {
  background-color: #2d2e2f;
}

.skew__cell--three {
  background-color: #38344b;
}

.skew__circle {
  width: 5em;
  height: 5em;
  background-color: #000;
  border-radius: 50%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 0 auto 2em auto;
}

.skew__svg {
  width: 2.5em;
  height: 2.5em;
  fill: #fff;
}

.skew__icon {
  -webkit-transform: translateY(100px) skewY(15deg);
          transform: translateY(100px) skewY(15deg);
}

.skew__heading {
  color: #fff;
  text-transform: uppercase;
  font-weight: 600;
  margin-bottom: .75em;
}

.skew__summary {
  line-height: 2;
  font-size: 1.375em;
  margin: 1em 0;
  font-weight: 300;
  color: #fff;
}

.projects {
  background-color: #e6e8ef;
  margin: -20rem auto 0 auto;
  padding: 50rem 0;
}

.projects__wrap {
  max-width: 1280px;
}

.projects__heading {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
  color: #020203;
  text-transform: uppercase;
  padding: 1rem 4rem 2rem 0;
  background-image: url(../img/brush.png);
  background-repeat: no-repeat;
  background-position: right bottom;
  margin-right: 4rem;
}

.projects__heading-one {
  display: block;
  font-weight: 200;
  position: relative;
}

.projects__heading-two {
  display: block;
  font-weight: 700;
  position: relative;
}

.projects__grid {
  display: grid;
  grid-template-columns: 1.5fr 1fr;
  margin-top: 10rem;
}

.projects__grid-cell--one {
  padding: 2rem;
}

.projects__grid-cell--two {
  position: relative;
  border-radius: .75rem;
  -webkit-box-shadow: 5px 5px 18px 3px rgba(0, 0, 0, 0.6);
          box-shadow: 5px 5px 18px 3px rgba(0, 0, 0, 0.6);
  overflow: hidden;
}

.projects__grid-cell--two::before {
  content: "";
  position: absolute;
  top: 0;
  left: -110%;
  width: 100%;
  height: 100%;
  background-color: #020203;
  z-index: 50;
}

.projects__image--one {
  width: 100%;
  height: auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9iYXNlLnNjc3MiLCJfdmFyTWl4aW5zLnNjc3MiLCJtb2R1bGVzL19uYXYuc2NzcyIsIm1vZHVsZXMvX2hlYWRlci5zY3NzIiwibW9kdWxlcy9faW50cm8uc2NzcyIsIm1vZHVsZXMvX2Fib3V0LnNjc3MiLCJzdHlsZXMuY3NzIiwibW9kdWxlcy9fc2tldy5zY3NzIiwibW9kdWxlcy9fcHJvamVjdHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLCtCQUFzQjtVQUF0Qix1QkFBc0I7RUFDbkIsd0JBQXVCO0VBQ3ZCLGtCQUFZO0NBQ2Y7O0FBRUQ7RUFDSSw0QkFBbUI7VUFBbkIsb0JBQW1CO0VBQ25CLHNCQUFxQjtFQUNyQixzQkFBcUI7RUFDckIsVUFBUztFQUNULFdBQVU7RUFDYixjQUFhO0NBQ2I7O0FBRUQ7RUFDSSxnQkFBZTtFQUNmLGtDQUFpQztFQUNqQyxrQkFBaUI7RUFBRSxzQ0FBc0M7RUFDekQsZUNMeUI7Q0RNNUI7O0FBRUQ7RUFDSSxlQUFjO0NBQ2pCOztBQUVELHFDQUFxQztBQUNyQztFQUNJLGVBQXVCO0NBQzFCOztBQUdELG1DQUFtQztBQUVuQztFQUVJLHNDQUFxQztFQUNyQyxpQkFBZ0I7RUFDaEIsa0JBQWlCO0NBQ3BCOztBQUVEO0VBQ0ksc0JBQXFCO0NBQ3hCOztBQUVEO0VBQ0UsbUJBQWtCO0NBQ25COztBQUVEO0VBQ0ksbUJBQWtCO0NBQ3JCOztBQUVEO0VBQ0ksbUJBQWtCO0NBQ3JCOztBQUVEO0VBQ0ksbUJBQWtCO0NBQ3JCOztBQUVEO0VBQ0ksa0JBQWlCO0NBQ3BCOztBQUVEO0VBQ0ksaUJBQWdCO0NBQ25COztBRWxFRDtFQUNJLG1CQUFrQjtFQUNsQiw0RkRldUI7VUNmdkIsb0ZEZXVCO0VDYnZCLDRDQUF1QztFQUV2QyxxQ0FBNEI7VUFBNUIsNkJBQTRCO0VBQzVCLHFEQUFvQztFQUFwQyw2Q0FBb0M7RUFBcEMscUNBQW9DO0VBQXBDLHVFQUFvQztFQUNwQyxvREFBMkM7VUFBM0MsNENBQTJD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QixPQUFNO0VBQ04sWUFBVztFQUNYLFlBQVc7RUFDWCxhQUFZO0VBQ1osMEJQL0NpQjtFT2dEakIsWUFBVztDQUNkOztBQUdMO0VBQ0ksWUFBVztFQUNYLGFBQVk7Q0FDZiIsImZpbGUiOiJzdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOnJvb3Qge1xyXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcclxuICAgIC0tbmF2aGVpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4qLCA6OmJlZm9yZSwgOjphZnRlciB7XHJcbiAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuXHRvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICAgIGZvbnQtc2l6ZTogMTAwJTtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjQ1OyAvKiB0aGlzIGlzIGZyb20gdGhlIDEuMjUgdHlwZSBzY2FsZSAqL1xyXG4gICAgY29sb3I6ICRncmF5LXRleHQ7XHJcbn1cclxuXHJcbmEge1xyXG4gICAgY29sb3I6IGluaGVyaXQ7XHJcbn1cclxuXHJcbi8qIGxlc3Mgdml2aWQgcmVkIGZvciBhY3RpdmUgbGlua3MgKi9cclxuYTphY3RpdmUge1xyXG4gICAgY29sb3I6IHJnYigxOTEsIDQzLCA4OCk7XHJcbn1cclxuXHJcblxyXG4vKioqKiogdHlwZS1zY2FsZSByYXRpbyAxLjI1ICoqKioqL1xyXG5cclxuaDEsIGgyLCBoMywgaDQge1xyXG4gICAgLy9tYXJnaW46IDIuNzVyZW0gMCAxcmVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBsaW5lLWhlaWdodDogMS4xNTtcclxufVxyXG5cclxucCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxLjI1ZW07XHJcbn1cclxuXHJcbmgxIHtcclxuICBmb250LXNpemU6IDMuMDUyZW07XHJcbn1cclxuXHJcbmgyIHtcclxuICAgIGZvbnQtc2l6ZTogMi40NDFlbTtcclxufVxyXG5cclxuaDMge1xyXG4gICAgZm9udC1zaXplOiAxLjk1M2VtO1xyXG59XHJcblxyXG5oNCB7XHJcbiAgICBmb250LXNpemU6IDEuNTYzZW07XHJcbn1cclxuXHJcbmg1IHtcclxuICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xyXG59XHJcblxyXG5zbWFsbCwgLnRleHRfc21hbGwge1xyXG4gICAgZm9udC1zaXplOiAwLjhlbTtcclxufVxyXG5cclxuXHJcblxyXG4iLCJAaW5jbHVkZSBicmVha3BvaW50LXNldChcInRvIGVtc1wiLCB0cnVlKTtcclxuXHJcbiRncmF5LTEwMDogaHNsKDIwNCwgNDUlLCA5OCUpO1xyXG4kZ3JheS0yMDA6IGhzbCgyMTAsIDM4JSwgOTUlKTtcclxuJGdyYXktMzAwOiBoc2woMjE0LCAzMiUsIDkxJSk7XHJcbiRncmF5LTQwMDogaHNsKDIxMSwgMjUlLCA4NCUpO1xyXG4kZ3JheS01MDA6IGhzbCgyMTQsIDIwJSwgNjklKTtcclxuJGdyYXktNjAwOiBoc2woMjE2LCAxNSUsIDUyJSk7XHJcbiRncmF5LTcwMDogaHNsKDIxOCwgMTclLCAzNSUpO1xyXG4kZ3JheS04MDA6IGhzbCgyMTgsIDIzJSwgMjMlKTtcclxuJGdyYXktOTAwOiBoc2woMjIwLCAyNiUsIDE0JSk7XHJcblxyXG4kZ3JheS1iZzogaHNsKDIyNywgMjQlLCA5MiUpO1xyXG5cclxuJGdyYXktdGV4dDogaHNsKDIxOCwgMCUsIDQzJSk7XHJcblxyXG4kYmxhY2stMTAwOiBoc2woMjQwLCAzMyUsIDElKTtcclxuXHJcbiRwdXJwbGU6IGhzbCgyNTAsIDE4JSwgMjUlKTtcclxuJGFxdWE6IGhzbCgxOTgsIDY5JSwgNjYlKTtcclxuJGdyZWVuOiBoc2woNzQsIDEwMCUsIDYxJSk7XHJcbiRwaW5rOiBoc2woMzQxLCA5MCUsIDYyJSk7XHJcbiRyZWQ6IGhzbCgzNTYsIDc5JSwgNTglKTtcclxuJGJsYWNrOiBoc2woMjEwLCAyJSwgMTglKTtcclxuXHJcblxyXG4kaHVnZXN0OiAxMzAwcHg7XHJcbiRodWdlOiAxMTcwcHg7XHJcbiRsYXJnZXN0OiAxMTIwcHg7XHJcbiRsYXJnZTogOTgwcHg7XHJcbiRtZWRpdW0tbGFyZ2U6IDg0MHB4O1xyXG4kbWVkaXVtOiA3NjBweDtcclxuJG1lZGl1bS1zbWFsbDogNzAwcHg7XHJcbiRzbWFsbDogNTYwcHg7XHJcbiRzbWFsbGVzdDogNDUwcHg7XHJcbiR0aW55OiAzNjlweDtcclxuXHJcblxyXG4iLCJcclxuLm5hdiB7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDJyZW07XHJcbiAgICBib3gtc2hhZG93OiAxcHggMXB4IDNweCAwIHJnYmEoJHB1cnBsZSwwLjUpLFxyXG4gICAgICAgICAgICAgICAgLTFweCAwIDNweCAwIHJnYmEoJHB1cnBsZSwwLjUpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuODUpO1xyXG4gICAgXHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3AgY2VudGVyO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDkwMG1zIGVhc2Utb3V0O1xyXG4gICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSg1MjVweCkgcm90YXRlWCgwZGVnKTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHotaW5kZXg6IDUwMDtcclxuICAgIFxyXG4gICAgJi5pcy0tc2Nyb2xsaW5nIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDUyNXB4KSByb3RhdGVYKC0xNDBkZWcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICZfX2xpc3Qge1xyXG4gICAgICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pdGVtLWxvZ28ge1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAuMjVlbTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciwgJjpmb2N1cyB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICByaWdodDogNTAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHB1cnBsZTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDM1MG1zIGVhc2Utb3V0O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyOjphZnRlciwgJjpmb2N1czo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxufSIsIlxyXG4uaGVhZGVyIHtcclxuICAgIHBhZGRpbmc6IDZyZW0gMnJlbTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBcclxuICAgIC8qIG5vIG5lZWQgdG8gdXNlIGNhbGMgYW5kIG11bHRpcGx5IHRpbWVzIDFweCBhcyB0aGUgZ2V0UHJvcGVydHlWYWx1ZSBwdWxsIHRoZSBweCAqL1xyXG4gICAgbWFyZ2luLXRvcDogdmFyKC0tbmF2aGVpZ2h0KTtcclxuICAgIFxyXG4gICAgJl9fZ3JpZCB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2dyaWQtY2VsbCB7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2dyaWQtY2VsbC0tb25lIHtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fZ3JpZC1jZWxsLS10d28ge1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19oZWFkaW5nIHtcclxuICAgICAgICBjb2xvcjogJGJsYWNrLTEwMDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbSAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvYnJ1c2gucG5nKTtcclxuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2hlYWRpbmctb25lIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBmb250LXdlaWdodDogMjAwO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBcclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogMTAwJSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGVhZGluZy10d28ge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAxMDAlIDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5IHtcclxuICAgICAgICBmb250LXNpemU6IDEuMzc1ZW07XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjc1ZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fYnV0dG9uIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNGVtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgcGFkZGluZzogLjc1ZW0gMS4yNWVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwdXJwbGU7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjI1ZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA5OWVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICB3aWR0aDogMTJlbTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDM1MG1zIGVhc2UtaW47XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciwgJjpmb2N1cyB7XHJcbiAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkcHVycGxlLCAxNSUpOyBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2J1dHRvbi10ZXh0IHtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3ZnIHtcclxuICAgICAgICB3aWR0aDogMS4yZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxLjJlbTtcclxuICAgICAgICBmaWxsOiAjZmZmO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAuNWVtO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAmX19pbWFnZSB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgLyogdGVtcG9yYXJ5IC0tIGp1c3QgcmVzaXplIGFjdHVhbCBpbWcgaWYgbmVlZGVkICovXHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjE1KTtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB6LWluZGV4OiAxMDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG59XHJcblxyXG5cclxuIiwiXHJcbi5pbnRybyB7XHJcbiAgICBwYWRkaW5nOiAyNXJlbSAycmVtIDI1cmVtIDJyZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHVycGxlO1xyXG4gICAgdHJhbnNmb3JtOiBza2V3WSgtMTVkZWcpO1xyXG4gICAgXHJcbiAgICAvKiBoYXZpbmcgYW5pbWF0aW9uIGlzc3VlcyB3aGVuIHB1dHRpbmcgdGhpcyBvbiBpbnRyb19fZ3JpZCAqL1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIFxyXG4gICAgJiA+ICoge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2tld1koMTVkZWcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19ncmlkIHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogLjdmciAxZnI7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAyZW07XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2dyaWQtY2VsbC0tb25lIHtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fZ3JpZC1jZWxsLS10d28ge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMGVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19ncmlkLWNlbGxfd3JhcCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA0cmVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19hbXBlcnNhbmQge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnUGFyaXNpZW5uZScsIGN1cnNpdmU7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMGVtO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAuNztcclxuICAgICAgICBvcGFjaXR5OiAuNDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fYmVhdXR5IHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAyMDA7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLyogZGlzYWJsZWQgYXMgYW0gdXNpbmcgYSBmcm9tVG8gKi9cclxuICAgICAgICAvL2xlZnQ6IDAlO1xyXG4gICAgICAgIC8vdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX191c2FiaWxpdHkge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLyogZGlzYWJsZWQgYXMgYW0gdXNpbmcgYSBmcm9tVG8gKi9cclxuICAgICAgICAvL2JvdHRvbTogMTQlO1xyXG4gICAgICAgIC8vbGVmdDogMTglO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5IHtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjtcclxuICAgICAgICBmb250LXNpemU6IDEuMzc1ZW07XHJcbiAgICAgICAgbWFyZ2luOiAzZW0gMDtcclxuICAgICAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgIGNvbG9yOiAkZ3JheS00MDA7XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAmX19pY29ucy13cmFwIHtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc2VjdCB7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IG1pbi1jb250ZW50IDFmcjtcclxuICAgICAgICBncmlkLWdhcDogMS41ZW0gMmVtO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NlY3Q6bm90KDpsYXN0LW9mLXR5cGUpIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjI1ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2NpcmNsZSB7XHJcbiAgICAgICAgd2lkdGg6IDVlbTtcclxuICAgICAgICBoZWlnaHQ6IDVlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N2ZyB7XHJcbiAgICAgICAgd2lkdGg6IDNlbTtcclxuICAgICAgICBoZWlnaHQ6IDNlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3ZnLS1vbmUge1xyXG4gICAgICAgIGZpbGw6ICRhcXVhO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdmctLXR3byB7XHJcbiAgICAgICAgZmlsbDogJGdyZWVuO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdmctLXRocmVlIHtcclxuICAgICAgICB3aWR0aDogMi41ZW07XHJcbiAgICAgICAgaGVpZ2h0OiAyLjVlbTtcclxuICAgICAgICBmaWxsOiAkcGluaztcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGVhZGluZyB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbn1cclxuXHJcbiIsIlxyXG5cclxuLmFib3V0IHtcclxuICAgIHBhZGRpbmc6IDIwcmVtIDJyZW07XHJcbiAgICBtYXgtd2lkdGg6IDEyODBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvIDEwcmVtIGF1dG87XHJcbiAgICBcclxuICAgICZfX2FtcGVyc2FuZCB7XHJcbiAgICAgICAgY29sb3I6ICRwdXJwbGU7XHJcbiAgICAgICAgb3BhY2l0eTogLjI1O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICZfX2JlYXV0eXtcclxuICAgICAgICBjb2xvcjogJGJsYWNrLTEwMDtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX191c2FiaWxpdHkge1xyXG4gICAgICAgIGNvbG9yOiAkYmxhY2stMTAwO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAyMDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3dyYXAge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDhyZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xpc3Qge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICAgICAgcGFkZGluZzogMS41cmVtIDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHB1cnBsZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBmb250LXNpemU6IDEuOTUzZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDIwMDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgICAgIHJpZ2h0OiA1MCU7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDM1MG1zIGVhc2Utb3V0O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjphY3RpdmUge1xyXG4gICAgICAgICAgIGNvbG9yOiAkYXF1YTsgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXI6OmFmdGVyIHtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19saW5rLS1jdXJyZW50IHtcclxuICAgICAgICBjb2xvcjogJGFxdWE7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAzNTBtcyBlYXNlLW91dDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICAmX19zZWN0LXdyYXAge1xyXG4gICAgICAgIHBhZGRpbmc6IDJyZW07XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHB1cnBsZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc2VjdCB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc2VjdC0tdmlzaWJsZSB7XHJcbiAgICAgICBkaXNwbGF5OiBibG9jazsgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NlY3QtYWJvdXQge1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICAmX19wcm9ncmVzcyB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIH1cclxuXHJcbiAgICAmX19wcm9ncmVzcyA+IGxpIHtcclxuICAgICAgICBmb250LWZhbWlseTogTGF0bztcclxuICAgICAgICBjb2xvcjogIzkzQTJBQztcclxuICAgICAgICBmb250LXdlaWdodDogMTAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbjogMmVtO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3Byb2dyZXNzID4gbGk6YmVmb3JlIHtcclxuICAgICAgICBmb250LXNpemU6IDEuMjVlbTtcclxuICAgICAgICBjb2xvcjogJHB1cnBsZTtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBjb250ZW50OiBhdHRyKGRhdGEtbmFtZSk7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYm90dG9tOiAtM3JlbTtcclxuICAgIH1cclxuXHJcbiAgICAvKlxyXG4gICAgJl9fcHJvZ3Jlc3MgPiBsaTphZnRlciB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1wZXJjZW50KTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB0b3A6IDMuN3JlbTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICAqL1xyXG5cclxuICAgIFtjbGFzcyo9cGVyY2VudF0ge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xyXG4gICAgICAgIGNvbG9yOiAkcHVycGxlO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fcHJvZ3Jlc3Mgc3ZnIHtcclxuICAgICAgICB3aWR0aDogMTByZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxMHJlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19wcm9ncmVzcyBzdmc6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcclxuICAgIH1cclxuXHJcbiAgICAmX19wcm9ncmVzcyBzdmc6bnRoLWNoaWxkKDIpIHBhdGgge1xyXG4gICAgICAgIGZpbGw6IG5vbmU7XHJcbiAgICAgICAgc3Ryb2tlLXdpZHRoOiAyNTtcclxuICAgICAgICBzdHJva2UtZGFzaGFycmF5OiA2Mjk7XHJcbiAgICAgICAgc3Ryb2tlOiByZ2JhKDI1NSwyNTUsMjU1LC45KTtcclxuICAgICAgICBhbmltYXRpb246IGxvYWQgMjAwMG1zIGxpbmVhcjtcclxuICAgIH1cclxuXHJcbiAgICAgXHJcbiAgXHJcbiAgICBcclxufVxyXG5cclxuXHJcbkBrZXlmcmFtZXMgbG9hZCB7IFxyXG5cclxuICAgIDAlIHtcclxuICAgICAgICBzdHJva2UtZGFzaG9mZnNldDogMDtcclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIiwiOnJvb3Qge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbiAgLS1uYXZoZWlnaHQ6IDEwcHg7XG59XG5cbiosIDo6YmVmb3JlLCA6OmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogMS40NTtcbiAgLyogdGhpcyBpcyBmcm9tIHRoZSAxLjI1IHR5cGUgc2NhbGUgKi9cbiAgY29sb3I6ICM2ZTZlNmU7XG59XG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuLyogbGVzcyB2aXZpZCByZWQgZm9yIGFjdGl2ZSBsaW5rcyAqL1xuYTphY3RpdmUge1xuICBjb2xvcjogI2JmMmI1ODtcbn1cblxuLyoqKioqIHR5cGUtc2NhbGUgcmF0aW8gMS4yNSAqKioqKi9cbmgxLCBoMiwgaDMsIGg0IHtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG59XG5cbnAge1xuICBtYXJnaW4tYm90dG9tOiAxLjI1ZW07XG59XG5cbmgxIHtcbiAgZm9udC1zaXplOiAzLjA1MmVtO1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMi40NDFlbTtcbn1cblxuaDMge1xuICBmb250LXNpemU6IDEuOTUzZW07XG59XG5cbmg0IHtcbiAgZm9udC1zaXplOiAxLjU2M2VtO1xufVxuXG5oNSB7XG4gIGZvbnQtc2l6ZTogMS4yNWVtO1xufVxuXG5zbWFsbCwgLnRleHRfc21hbGwge1xuICBmb250LXNpemU6IDAuOGVtO1xufVxuXG4ubmF2IHtcbiAgcGFkZGluZzogMXJlbSAycmVtO1xuICBib3gtc2hhZG93OiAxcHggMXB4IDNweCAwIHJnYmEoNTYsIDUyLCA3NSwgMC41KSwgLTFweCAwIDNweCAwIHJnYmEoNTYsIDUyLCA3NSwgMC41KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjg1KTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogdG9wIGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDkwMG1zIGVhc2Utb3V0O1xuICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDUyNXB4KSByb3RhdGVYKDBkZWcpO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDUwMDtcbn1cblxuLm5hdi5pcy0tc2Nyb2xsaW5nIHtcbiAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSg1MjVweCkgcm90YXRlWCgtMTQwZGVnKTtcbn1cblxuLm5hdl9fbGlzdCB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubmF2X19sb2dvIHtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5uYXZfX2xpbmsge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiAuMjVlbTtcbiAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xufVxuXG4ubmF2X19saW5rOmhvdmVyLCAubmF2X19saW5rOmZvY3VzIHtcbiAgY29sb3I6ICMzODM0NGI7XG59XG5cbi5uYXZfX2xpbms6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDUwJTtcbiAgcmlnaHQ6IDUwJTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzODM0NGI7XG4gIHRyYW5zaXRpb246IGFsbCAzNTBtcyBlYXNlLW91dDtcbn1cblxuLm5hdl9fbGluazpob3Zlcjo6YWZ0ZXIsIC5uYXZfX2xpbms6Zm9jdXM6OmFmdGVyIHtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbi5oZWFkZXIge1xuICBwYWRkaW5nOiA2cmVtIDJyZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIC8qIG5vIG5lZWQgdG8gdXNlIGNhbGMgYW5kIG11bHRpcGx5IHRpbWVzIDFweCBhcyB0aGUgZ2V0UHJvcGVydHlWYWx1ZSBwdWxsIHRoZSBweCAqL1xuICBtYXJnaW4tdG9wOiB2YXIoLS1uYXZoZWlnaHQpO1xufVxuXG4uaGVhZGVyX19ncmlkIHtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cblxuLmhlYWRlcl9faGVhZGluZyB7XG4gIGNvbG9yOiAjMDIwMjAzO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBwYWRkaW5nOiAxZW0gMDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9icnVzaC5wbmcpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b207XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cblxuLmhlYWRlcl9faGVhZGluZy1vbmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaGVhZGVyX19oZWFkaW5nLW9uZTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDE7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDEwMCUgMDtcbn1cblxuLmhlYWRlcl9faGVhZGluZy10d28ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaGVhZGVyX19oZWFkaW5nLXR3bzo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDE7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDEwMCUgMDtcbn1cblxuLmhlYWRlcl9fc3VtbWFyeSB7XG4gIGZvbnQtc2l6ZTogMS4zNzVlbTtcbiAgbWFyZ2luLWJvdHRvbTogLjc1ZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbi5oZWFkZXJfX2J1dHRvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXRvcDogNGVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBwYWRkaW5nOiAuNzVlbSAxLjI1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMzODM0NGI7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDEuMjVlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgYm9yZGVyLXJhZGl1czogOTllbTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMmVtO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDM1MG1zIGVhc2UtaW47XG59XG5cbi5oZWFkZXJfX2J1dHRvbjpob3ZlciwgLmhlYWRlcl9fYnV0dG9uOmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVhNTQ3ODtcbn1cblxuLmhlYWRlcl9fc3ZnIHtcbiAgd2lkdGg6IDEuMmVtO1xuICBoZWlnaHQ6IDEuMmVtO1xuICBmaWxsOiAjZmZmO1xuICBtYXJnaW4tbGVmdDogLjVlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcHgpO1xufVxuXG4uaGVhZGVyX19pbWFnZSB7XG4gIHdpZHRoOiAxMDAlO1xuICAvKiB0ZW1wb3JhcnkgLS0ganVzdCByZXNpemUgYWN0dWFsIGltZyBpZiBuZWVkZWQgKi9cbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjE1KTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDEwMDtcbn1cblxuLmludHJvIHtcbiAgcGFkZGluZzogMjVyZW0gMnJlbSAyNXJlbSAycmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzgzNDRiO1xuICB0cmFuc2Zvcm06IHNrZXdZKC0xNWRlZyk7XG4gIC8qIGhhdmluZyBhbmltYXRpb24gaXNzdWVzIHdoZW4gcHV0dGluZyB0aGlzIG9uIGludHJvX19ncmlkICovXG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5pbnRybyA+ICoge1xuICB0cmFuc2Zvcm06IHNrZXdZKDE1ZGVnKTtcbn1cblxuLmludHJvX19ncmlkIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAuN2ZyIDFmcjtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAyZW07XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLmludHJvX19pbWFnZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuXG4uaW50cm9fX2dyaWQtY2VsbC0tdHdvIHtcbiAgbWFyZ2luLWxlZnQ6IDEwZW07XG59XG5cbi5pbnRyb19fZ3JpZC1jZWxsX3dyYXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiA0cmVtO1xufVxuXG4uaW50cm9fX2FtcGVyc2FuZCB7XG4gIGZvbnQtZmFtaWx5OiAnUGFyaXNpZW5uZScsIGN1cnNpdmU7XG4gIGZvbnQtc2l6ZTogMjBlbTtcbiAgbGluZS1oZWlnaHQ6IC43O1xuICBvcGFjaXR5OiAuNDtcbn1cblxuLmludHJvX19iZWF1dHkge1xuICBtYXJnaW4tdG9wOiAwO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgLyogZGlzYWJsZWQgYXMgYW0gdXNpbmcgYSBmcm9tVG8gKi9cbn1cblxuLmludHJvX191c2FiaWxpdHkge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICAvKiBkaXNhYmxlZCBhcyBhbSB1c2luZyBhIGZyb21UbyAqL1xufVxuXG4uaW50cm9fX3N1bW1hcnkge1xuICBsaW5lLWhlaWdodDogMjtcbiAgZm9udC1zaXplOiAxLjM3NWVtO1xuICBtYXJnaW46IDNlbSAwO1xuICBmb250LXdlaWdodDogMzAwO1xuICBjb2xvcjogI2NjZDZlMDtcbiAgd2lkdGg6IDgwJTtcbn1cblxuLmludHJvX19zZWN0IHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBtaW4tY29udGVudCAxZnI7XG4gIGdyaWQtZ2FwOiAxLjVlbSAyZW07XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5pbnRyb19fc2VjdDpub3QoOmxhc3Qtb2YtdHlwZSkge1xuICBtYXJnaW4tYm90dG9tOiAxLjI1ZW07XG59XG5cbi5pbnRyb19fY2lyY2xlIHtcbiAgd2lkdGg6IDVlbTtcbiAgaGVpZ2h0OiA1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5pbnRyb19fc3ZnIHtcbiAgd2lkdGg6IDNlbTtcbiAgaGVpZ2h0OiAzZW07XG59XG5cbi5pbnRyb19fc3ZnLS1vbmUge1xuICBmaWxsOiAjNmNjMGU0O1xufVxuXG4uaW50cm9fX3N2Zy0tdHdvIHtcbiAgZmlsbDogI2QxZmYzODtcbn1cblxuLmludHJvX19zdmctLXRocmVlIHtcbiAgd2lkdGg6IDIuNWVtO1xuICBoZWlnaHQ6IDIuNWVtO1xuICBmaWxsOiAjZjU0NzdlO1xufVxuXG4uaW50cm9fX2hlYWRpbmcge1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLmFib3V0IHtcbiAgcGFkZGluZzogMjByZW0gMnJlbTtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIG1hcmdpbjogMCBhdXRvIDEwcmVtIGF1dG87XG4gIC8qXHJcbiAgICAmX19wcm9ncmVzcyA+IGxpOmFmdGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgY29udGVudDogYXR0cihkYXRhLXBlcmNlbnQpO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHRvcDogMy43cmVtO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgICovXG59XG5cbi5hYm91dF9fYW1wZXJzYW5kIHtcbiAgY29sb3I6ICMzODM0NGI7XG4gIG9wYWNpdHk6IC4yNTtcbn1cblxuLmFib3V0X19iZWF1dHkge1xuICBjb2xvcjogIzAyMDIwMztcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmFib3V0X191c2FiaWxpdHkge1xuICBjb2xvcjogIzAyMDIwMztcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbn1cblxuLmFib3V0X193cmFwIHtcbiAgbWFyZ2luLXRvcDogOHJlbTtcbn1cblxuLmFib3V0X19saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIHBhZGRpbmc6IDEuNXJlbSAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzgzNDRiO1xufVxuXG4uYWJvdXRfX2xpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMS45NTNlbTtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmFib3V0X19saW5rOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgbGVmdDogNTAlO1xuICByaWdodDogNTAlO1xuICBib3R0b206IDA7XG4gIGhlaWdodDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIHRyYW5zaXRpb246IGFsbCAzNTBtcyBlYXNlLW91dDtcbn1cblxuLmFib3V0X19saW5rOmFjdGl2ZSB7XG4gIGNvbG9yOiAjNmNjMGU0O1xufVxuXG4uYWJvdXRfX2xpbms6aG92ZXI6OmFmdGVyIHtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbi5hYm91dF9fbGluay0tY3VycmVudCB7XG4gIGNvbG9yOiAjNmNjMGU0O1xufVxuXG4uYWJvdXRfX2xpbmstLWN1cnJlbnQ6OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiBcIlwiO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuICB0cmFuc2l0aW9uOiBhbGwgMzUwbXMgZWFzZS1vdXQ7XG59XG5cbi5hYm91dF9fc2VjdC13cmFwIHtcbiAgcGFkZGluZzogMnJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzM4MzQ0Yjtcbn1cblxuLmFib3V0X19zZWN0IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmFib3V0X19zZWN0LS12aXNpYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5hYm91dF9fcHJvZ3Jlc3Mge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5hYm91dF9fcHJvZ3Jlc3MgPiBsaSB7XG4gIGZvbnQtZmFtaWx5OiBMYXRvO1xuICBjb2xvcjogIzkzQTJBQztcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAyZW07XG59XG5cbi5hYm91dF9fcHJvZ3Jlc3MgPiBsaTpiZWZvcmUge1xuICBmb250LXNpemU6IDEuMjVlbTtcbiAgY29sb3I6ICMzODM0NGI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogYXR0cihkYXRhLW5hbWUpO1xuICB3aWR0aDogMTAwJTtcbiAgYm90dG9tOiAtM3JlbTtcbn1cblxuLmFib3V0IFtjbGFzcyo9cGVyY2VudF0ge1xuICBmb250LXNpemU6IDEuMjVlbTtcbiAgY29sb3I6ICMzODM0NGI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG5cbi5hYm91dF9fcHJvZ3Jlc3Mgc3ZnIHtcbiAgd2lkdGg6IDEwcmVtO1xuICBoZWlnaHQ6IDEwcmVtO1xufVxuXG4uYWJvdXRfX3Byb2dyZXNzIHN2ZzpudGgtY2hpbGQoMikge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbn1cblxuLmFib3V0X19wcm9ncmVzcyBzdmc6bnRoLWNoaWxkKDIpIHBhdGgge1xuICBmaWxsOiBub25lO1xuICBzdHJva2Utd2lkdGg6IDI1O1xuICBzdHJva2UtZGFzaGFycmF5OiA2Mjk7XG4gIHN0cm9rZTogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpO1xuICBhbmltYXRpb246IGxvYWQgMjAwMG1zIGxpbmVhcjtcbn1cblxuQGtleWZyYW1lcyBsb2FkIHtcbiAgMCUge1xuICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAwO1xuICB9XG59XG5cbi5za2V3IHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgdHJhbnNmb3JtOiBza2V3WSgtMTVkZWcpO1xufVxuXG4uc2tld19fY2VsbCB7XG4gIHBhZGRpbmc6IDEwZW0gMmVtO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc2tld19fY2VsbCA+ICoge1xuICAvKiBpc3N1ZXMgd2l0aCBza2V3aW5nIHRoZSBncmlkIG9yIHRoZSBjZWxscyAqL1xuICB0cmFuc2Zvcm06IHNrZXdZKDE1ZGVnKTtcbn1cblxuLnNrZXdfX2NlbGwtLW9uZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOTNmNGI7XG59XG5cbi5za2V3X19jZWxsLS10d28ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmQyZTJmO1xufVxuXG4uc2tld19fY2VsbC0tdGhyZWUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzgzNDRiO1xufVxuXG4uc2tld19fY2lyY2xlIHtcbiAgd2lkdGg6IDVlbTtcbiAgaGVpZ2h0OiA1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbjogMCBhdXRvIDJlbSBhdXRvO1xufVxuXG4uc2tld19fc3ZnIHtcbiAgd2lkdGg6IDIuNWVtO1xuICBoZWlnaHQ6IDIuNWVtO1xuICBmaWxsOiAjZmZmO1xufVxuXG4uc2tld19faWNvbiB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDBweCkgc2tld1koMTVkZWcpO1xufVxuXG4uc2tld19faGVhZGluZyB7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW4tYm90dG9tOiAuNzVlbTtcbn1cblxuLnNrZXdfX3N1bW1hcnkge1xuICBsaW5lLWhlaWdodDogMjtcbiAgZm9udC1zaXplOiAxLjM3NWVtO1xuICBtYXJnaW46IDFlbSAwO1xuICBmb250LXdlaWdodDogMzAwO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLnByb2plY3RzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZThlZjtcbiAgbWFyZ2luOiAtMjByZW0gYXV0byAwIGF1dG87XG4gIHBhZGRpbmc6IDUwcmVtIDA7XG59XG5cbi5wcm9qZWN0c19fd3JhcCB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xufVxuXG4ucHJvamVjdHNfX2hlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIGNvbG9yOiAjMDIwMjAzO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBwYWRkaW5nOiAxcmVtIDRyZW0gMnJlbSAwO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2JydXNoLnBuZyk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IGJvdHRvbTtcbiAgbWFyZ2luLXJpZ2h0OiA0cmVtO1xufVxuXG4ucHJvamVjdHNfX2hlYWRpbmctb25lIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnByb2plY3RzX19oZWFkaW5nLXR3byB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXdlaWdodDogNzAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5wcm9qZWN0c19fZ3JpZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMS41ZnIgMWZyO1xuICBtYXJnaW4tdG9wOiAxMHJlbTtcbn1cblxuLnByb2plY3RzX19ncmlkLWNlbGwtLW9uZSB7XG4gIHBhZGRpbmc6IDJyZW07XG59XG5cbi5wcm9qZWN0c19fZ3JpZC1jZWxsLS10d28ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlci1yYWRpdXM6IC43NXJlbTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAxOHB4IDNweCByZ2JhKDAsIDAsIDAsIDAuNik7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5wcm9qZWN0c19fZ3JpZC1jZWxsLS10d286OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAtMTEwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAyMDIwMztcbiAgei1pbmRleDogNTA7XG59XG5cbi5wcm9qZWN0c19faW1hZ2UtLW9uZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG4iLCJcclxuXHJcbi5za2V3IHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgdHJhbnNmb3JtOiBza2V3WSgtMTVkZWcpO1xyXG4gICAgXHJcbiAgICAmX19jZWxsIHtcclxuICAgICAgICBwYWRkaW5nOiAxMGVtIDJlbTtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2NlbGwgPiAqIHtcclxuICAgICAgICAvKiBpc3N1ZXMgd2l0aCBza2V3aW5nIHRoZSBncmlkIG9yIHRoZSBjZWxscyAqL1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2tld1koMTVkZWcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19jZWxsLS1vbmUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRyZWQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2NlbGwtLXR3byB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19jZWxsLS10aHJlZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHB1cnBsZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fY2lyY2xlIHtcclxuICAgICAgICB3aWR0aDogNWVtO1xyXG4gICAgICAgIGhlaWdodDogNWVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW46IDAgYXV0byAyZW0gYXV0bztcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3ZnIHtcclxuICAgICAgICB3aWR0aDogMi41ZW07XHJcbiAgICAgICAgaGVpZ2h0OiAyLjVlbTtcclxuICAgICAgICBmaWxsOiAjZmZmO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pY29uIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTAwcHgpIHNrZXdZKDE1ZGVnKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGVhZGluZyB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IC43NWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5IHtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjtcclxuICAgICAgICBmb250LXNpemU6IDEuMzc1ZW07XHJcbiAgICAgICAgbWFyZ2luOiAxZW0gMDtcclxuICAgICAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG59IiwiXHJcblxyXG4ucHJvamVjdHMge1xyXG4gICAgXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS1iZztcclxuICAgIG1hcmdpbjogLTIwcmVtIGF1dG8gMCBhdXRvO1xyXG4gICAgcGFkZGluZzogNTByZW0gMDtcclxuICAgIFxyXG4gICAgXHJcbiAgICAmX193cmFwIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEyODBweDtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGVhZGluZyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuICAgICAgICBcclxuICAgICAgICBjb2xvcjogJGJsYWNrLTEwMDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIHBhZGRpbmc6IDFyZW0gNHJlbSAycmVtIDA7O1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvYnJ1c2gucG5nKTtcclxuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IGJvdHRvbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDRyZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2hlYWRpbmctb25lIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBmb250LXdlaWdodDogMjAwO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGVhZGluZy10d28ge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19ncmlkIHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMS41ZnIgMWZyO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEwcmVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19ncmlkLWNlbGwtLW9uZSB7XHJcbiAgICAgICAgcGFkZGluZzogMnJlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fZ3JpZC1jZWxsLS10d28ge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAuNzVyZW07XHJcbiAgICAgICAgYm94LXNoYWRvdzogNXB4IDVweCAxOHB4IDNweCByZ2JhKDAsMCwwLC42KTtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuOyBcclxuICAgICAgICBcclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbGVmdDogLTExMCU7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibGFjay0xMDA7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDUwOyAvLyBldmVuIHRobyB0aGUgcHNldWRvIGVsZW1lbnQgaXMgc3RhY2tlZCAgb24gdG9wLCB0aGlzIGlzIG5lZWRlZCB0byBzdG9wIGZsaWNrZXIgd2hlbiB0aGUgaW1nIGJlY29tZXMgb3BhcXVlIGR1cmluZyB0aGUgYW5pbWF0aW9uXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pbWFnZS0tb25lIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxufVxyXG5cclxuXHJcbiJdfQ== */
