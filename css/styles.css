/* anlogous */
/* triadic */
:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  scroll-behavior: smooth;
  --navheight: 10px;
}

*, ::before, ::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
  outline: none;
}

body {
  font-size: 100%;
  font-family: 'Roboto', sans-serif;
  line-height: 1.45;
  /* this is from the 1.25 type scale */
  color: #6e6e6e;
}

a {
  color: inherit;
}

/***** type-scale ratio 1.25 *****/
h1, h2, h3, h4 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 400;
  line-height: 1.15;
}

p {
  margin-bottom: 1.25em;
}

h1 {
  font-size: 3.052em;
}

h2 {
  font-size: 2.441em;
}

h3 {
  font-size: 1.953em;
}

h4 {
  font-size: 1.563em;
}

h5 {
  font-size: 1.25em;
}

small, .text_small {
  font-size: 0.8em;
}

.nav {
  padding: 1rem 2rem;
  -webkit-box-shadow: 1px 1px 3px 0 rgba(56, 52, 75, 0.5), -1px 0 3px 0 rgba(56, 52, 75, 0.5);
          box-shadow: 1px 1px 3px 0 rgba(56, 52, 75, 0.5), -1px 0 3px 0 rgba(56, 52, 75, 0.5);
  background-color: rgba(255, 255, 255, 0.85);
  -webkit-transform-origin: top center;
          transform-origin: top center;
  -webkit-transition: -webkit-transform 900ms ease-out;
  transition: -webkit-transform 900ms ease-out;
  transition: transform 900ms ease-out;
  transition: transform 900ms ease-out, -webkit-transform 900ms ease-out;
  -webkit-transform: perspective(525px) rotateX(0deg);
          transform: perspective(525px) rotateX(0deg);
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 500;
}

.nav.is--scrolling {
  -webkit-transform: perspective(525px) rotateX(-140deg);
          transform: perspective(525px) rotateX(-140deg);
}

.nav__list {
  max-width: 1280px;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.nav__logo {
  width: 50px;
  height: auto;
  display: block;
}

.nav__link {
  text-transform: uppercase;
  position: relative;
  padding-bottom: .25em;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
  /** focus is conflicing with .is--active class */
  /*&:focus {
            color: $aqua;
        }*/
}

.nav__link:hover {
  color: #38344b;
}

.nav__link::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  right: 50%;
  height: 2px;
  background-color: #38344b;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.nav__link:hover::after {
  left: 0;
  right: 0;
}

.is--active::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 2px;
  background-color: #38344b;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.header {
  padding: 6rem 2rem;
  overflow: hidden;
  /* no need to use calc and multiply times 1px as the getPropertyValue pull the px */
  margin-top: var(--navheight);
}

.header__grid {
  max-width: 1280px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  visibility: hidden;
}

.header__heading {
  color: #020203;
  text-transform: uppercase;
  padding: 1em 0;
  background-image: url(../img/brush.png);
  background-repeat: no-repeat;
  background-position: bottom;
  margin-bottom: 2em;
}

.header__heading-one {
  display: block;
  font-weight: 200;
  position: relative;
}

.header__heading-one::before {
  content: "";
  position: absolute;
  background-color: #fff;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  -webkit-transform-origin: 100% 0;
          transform-origin: 100% 0;
}

.header__heading-two {
  display: block;
  font-weight: 700;
  position: relative;
}

.header__heading-two::before {
  content: "";
  position: absolute;
  background-color: #fff;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  -webkit-transform-origin: 100% 0;
          transform-origin: 100% 0;
}

.header__summary {
  font-size: 1.375em;
  margin-bottom: .75em;
  font-weight: 300;
}

.header__button {
  display: inline-block;
  margin-top: 4em;
  text-transform: uppercase;
  padding: .75em 1.25em;
  background-color: #38344b;
  color: #fff;
  font-size: 1.25em;
  font-weight: 700;
  border-radius: 99em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 12em;
  -webkit-transition: background-color 350ms ease-in;
  transition: background-color 350ms ease-in;
}

.header__button:hover, .header__button:focus {
  background-color: #5a5478;
}

.header__svg {
  width: 1.2em;
  height: 1.2em;
  fill: #fff;
  margin-left: .5em;
  -webkit-transform: translateY(-1px);
          transform: translateY(-1px);
}

.header__image {
  width: 100%;
  /* temporary -- just resize actual img if needed */
  -webkit-transform: scale(1.15);
          transform: scale(1.15);
  -webkit-transform-origin: top;
          transform-origin: top;
  height: auto;
  display: block;
  position: relative;
  z-index: 100;
}

.intro {
  padding: 25rem 2rem 25rem 2rem;
  background-color: #38344b;
  -webkit-transform: skewY(-15deg);
          transform: skewY(-15deg);
  /* having animation issues when putting this on intro__grid */
  overflow: hidden;
}

.intro > * {
  -webkit-transform: skewY(15deg);
          transform: skewY(15deg);
}

.intro__grid {
  display: grid;
  grid-template-columns: .7fr 1fr;
  grid-column-gap: 2em;
  max-width: 1280px;
  margin: 0 auto;
}

.intro__image {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.intro__grid-cell--two {
  margin-left: 10em;
}

.intro__grid-cell_wrap {
  position: relative;
  padding-bottom: 4rem;
}

.intro__ampersand {
  font-family: 'Parisienne', cursive;
  font-size: 20em;
  line-height: .7;
  opacity: .4;
}

.intro__beauty {
  margin-top: 0;
  color: #fff;
  font-weight: 200;
  text-transform: uppercase;
  position: absolute;
  top: 50%;
  /* disabled as am using a fromTo */
}

.intro__usability {
  color: #fff;
  font-weight: 700;
  text-transform: uppercase;
  position: absolute;
  /* disabled as am using a fromTo */
}

.intro__summary {
  line-height: 2;
  font-size: 1.375em;
  margin: 3em 0;
  font-weight: 300;
  color: #ccd6e0;
  width: 80%;
}

.intro__sect {
  display: grid;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  grid-gap: 1.5em 2em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.intro__sect:not(:last-of-type) {
  margin-bottom: 1.25em;
}

.intro__circle {
  width: 5em;
  height: 5em;
  background-color: #000;
  border-radius: 50%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.intro__svg {
  width: 3em;
  height: 3em;
}

.intro__svg--one {
  fill: #6cc0e4;
}

.intro__svg--two {
  fill: #d1ff38;
}

.intro__svg--three {
  width: 2.5em;
  height: 2.5em;
  fill: #f5477e;
}

.intro__heading {
  color: #fff;
  text-transform: uppercase;
  font-weight: 600;
}

.about {
  padding: 20rem 0 26rem 0;
  /* full width */
  /*
    &__progress > li:after {
        position: absolute;
        content: attr(data-percent);
        width: 100%;
        top: 3.7rem;
        left: 0;
        font-size: 2rem;
        text-align: center;
    }
    */
}

.about__grid-cell_wrap {
  max-width: 1280px;
  margin: 0 auto 10rem auto;
  padding: 0 2rem;
}

.about__ampersand {
  color: #38344b;
  opacity: .25;
}

.about__beauty {
  color: #020203;
  font-weight: 700;
}

.about__usability {
  color: #020203;
  font-weight: 200;
  /**** adjust this so it is closer to the 'SKILLS' line..this uses the same animation as the into sect ***/
  margin-top: -.8em;
  margin-left: -1em;
}

.about__bleed {
  background-image: url(../img/about-bleed.jpg);
  background-repeat: no-repeat;
  min-height: 390px;
}

.about__wrap {
  max-width: 1280px;
  margin: -5.8rem auto 0 auto;
}

.about__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding: 0;
}

.about__item {
  background-color: #38344b;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.about__item:hover, .about__item:focus {
  background-color: #6cc0e4;
}

.about__link {
  padding: 1.5rem 2rem;
  display: block;
  position: relative;
  font-family: 'Montserrat', sans-serif;
  color: #fff;
  font-size: 1.953em;
  font-weight: 200;
  text-transform: uppercase;
  /*&:hover::after {
            left: 0;
            right: 0;
        }*/
}

.about__link::before {
  position: absolute;
  content: "";
  left: 50%;
  right: 50%;
  top: -4px;
  height: 4px;
  background-color: #38344b;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.about__link:active {
  color: #000;
}

.about__link--current {
  color: #000;
  background-color: #fff;
}

.about__link--current::before {
  left: 0;
  right: 0;
}

.about__sect-wrap {
  padding: 2rem 0;
}

.about__sect {
  height: 0;
  overflow: hidden;
  -webkit-transition: all 450ms ease-out;
  transition: all 450ms ease-out;
}

.about__sect--visible {
  height: auto;
  /* padding is cutting off the content */
}

.about__progress {
  position: relative;
  display: inline-block;
  padding: 0;
  text-align: center;
  width: 100%;
  margin: 0 auto;
}

.about__progress > li {
  font-family: Lato;
  color: #93A2AC;
  font-weight: 100;
  display: inline-block;
  position: relative;
  text-align: center;
  margin: 2em;
}

.about__progress > li:before {
  font-size: 1.25em;
  color: #38344b;
  font-weight: 400;
  position: absolute;
  content: attr(data-name);
  width: 100%;
  bottom: -3rem;
}

.about [class*=percent] {
  font-size: 1.25em;
  color: #38344b;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.about__progress svg {
  width: 10rem;
  height: 10rem;
}

.about__progress svg:nth-child(2) {
  position: absolute;
  left: 0;
  top: 0;
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
}

.about__progress svg:nth-child(2) path {
  fill: none;
  stroke-width: 25;
  stroke-dasharray: 629;
  stroke: rgba(255, 255, 255, 0.9);
  /* added a delay to wait for the sect height transition, which is 450ms..so not sure why 1000ms is working but this might need to be adjusted */
  -webkit-animation: load 2000ms 1000ms linear;
          animation: load 2000ms 1000ms linear;
}

@-webkit-keyframes load {
  0% {
    stroke-dashoffset: 0;
  }
}

@keyframes load {
  0% {
    stroke-dashoffset: 0;
  }
}

.skew {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  -webkit-transform: skewY(-15deg);
          transform: skewY(-15deg);
}

.skew__cell {
  padding: 10em 2em;
  color: #fff;
  text-align: center;
}

.skew__cell > * {
  /* issues with skewing the grid or the cells */
  -webkit-transform: skewY(15deg);
          transform: skewY(15deg);
}

.skew__cell--one {
  background-color: #4b3634;
}

.skew__cell--two {
  background-color: #474b34;
}

.skew__cell--three {
  background-color: #38344b;
}

.skew__circle {
  width: 5em;
  height: 5em;
  background-color: #000;
  border-radius: 50%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 0 auto 2em auto;
}

.skew__svg {
  width: 2.5em;
  height: 2.5em;
  fill: #fff;
}

.skew__icon {
  -webkit-transform: translateY(100px) skewY(15deg);
          transform: translateY(100px) skewY(15deg);
}

.skew__heading {
  color: #fff;
  text-transform: uppercase;
  font-weight: 600;
  margin-bottom: .75em;
}

.skew__summary {
  line-height: 2;
  font-size: 1.375em;
  margin: 1em 0;
  font-weight: 300;
  color: #fff;
}

.projects {
  background-color: #e6e8ef;
  margin: -20rem auto 0 auto;
  padding: 50rem 2rem;
  /** these must be listed individually in order to work with the GSAP CSSRulePlugin */
}

.projects__wrap {
  max-width: 1280px;
}

.projects__summary {
  line-height: 2;
  font-size: 1.375em;
  margin: 3em 4rem 3em 0;
  font-weight: 300;
  color: #4a5568;
  width: 100%;
  text-align: right;
  padding-right: 4rem;
}

.projects__heading {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
  color: #020203;
  text-transform: uppercase;
  padding: 1rem 4rem 2rem 0;
  background-image: url(../img/brush.png);
  background-repeat: no-repeat;
  background-position: right bottom;
  margin-right: 4rem;
}

.projects__heading-one {
  display: block;
  font-weight: 200;
  position: relative;
}

.projects__heading-two {
  display: block;
  font-weight: 700;
  position: relative;
}

.projects__grid {
  display: grid;
  grid-template-columns: 1fr 1.25fr;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  grid-gap: 1.5em;
  margin-top: 10rem;
}

.projects__cell-heading {
  -webkit-transition: opacity 0.35s, -webkit-transform 0.35s;
  transition: opacity 0.35s, -webkit-transform 0.35s;
  transition: opacity 0.35s, transform 0.35s;
  transition: opacity 0.35s, transform 0.35s, -webkit-transform 0.35s;
  margin-bottom: 1.25em;
  opacity: 0;
  text-transform: uppercase;
  -webkit-transform: translate3d(-40%, 0, 0);
          transform: translate3d(-40%, 0, 0);
  -webkit-transition-delay: 300ms;
          transition-delay: 300ms;
}

.projects__built {
  -webkit-transition: opacity 0.35s, -webkit-transform 0.35s;
  transition: opacity 0.35s, -webkit-transform 0.35s;
  transition: opacity 0.35s, transform 0.35s;
  transition: opacity 0.35s, transform 0.35s, -webkit-transform 0.35s;
  margin-bottom: 1em;
  opacity: 0;
  font-size: 1.25em;
  -webkit-transform: translate3d(0, -40%, 0);
          transform: translate3d(0, -40%, 0);
  -webkit-transition-delay: 0s;
          transition-delay: 0s;
}

.projects__list {
  -webkit-transition: opacity 0.35s, -webkit-transform 0.35s;
  transition: opacity 0.35s, -webkit-transform 0.35s;
  transition: opacity 0.35s, transform 0.35s;
  transition: opacity 0.35s, transform 0.35s, -webkit-transform 0.35s;
  margin: 0 0 5px;
  opacity: 0;
  -webkit-transform: translate3d(0, -40%, 0);
          transform: translate3d(0, -40%, 0);
  -webkit-transition-delay: 0s;
          transition-delay: 0s;
}

.projects__item {
  -webkit-transition: opacity 0.35s, -webkit-transform 0.35s;
  transition: opacity 0.35s, -webkit-transform 0.35s;
  transition: opacity 0.35s, transform 0.35s;
  transition: opacity 0.35s, transform 0.35s, -webkit-transform 0.35s;
  margin: 0 0 5px;
  opacity: 0;
  -webkit-transform: translate3d(0, -40%, 0);
          transform: translate3d(0, -40%, 0);
  -webkit-transition-delay: 0s;
          transition-delay: 0s;
}

.projects__grid-cell {
  position: relative;
  border-radius: .75rem;
  -webkit-box-shadow: 5px 5px 18px 3px rgba(0, 0, 0, 0.6);
          box-shadow: 5px 5px 18px 3px rgba(0, 0, 0, 0.6);
  overflow: hidden;
  background-color: #000;
}

.projects__grid-cell::before {
  content: "";
  position: absolute;
  top: 0;
  left: -110%;
  width: 100%;
  height: 100%;
  background-color: #020203;
  z-index: 50;
}

.projects__grid-cell:hover .projects__image {
  opacity: .3;
  -webkit-transform: scale(1.15);
          transform: scale(1.15);
}

.projects__grid-cell:hover .projects__cell-heading {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-transition-delay: 400ms;
          transition-delay: 400ms;
}

.projects__grid-cell:hover .projects__built {
  opacity: 0.9;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-transition-delay: 600ms;
          transition-delay: 600ms;
}

.projects__grid-cell:hover .projects__list {
  opacity: 0.9;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-transition-delay: 600ms;
          transition-delay: 600ms;
}

.projects__grid-cell:hover .projects__item:first-of-type {
  opacity: 0.9;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-transition-delay: 900ms;
          transition-delay: 900ms;
}

.projects__grid-cell:hover .projects__item:nth-of-type(2) {
  opacity: 0.9;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-transition-delay: 1100ms;
          transition-delay: 1100ms;
}

.projects__grid-cell:hover .projects__item:last-of-type {
  opacity: 0.9;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-transition-delay: 1400ms;
          transition-delay: 1400ms;
}

.projects__grid-cell:hover .projects__caption::before {
  background: transparent;
  right: 30px;
  -webkit-transition-delay: 0s;
          transition-delay: 0s;
  opacity: 1;
}

.projects__grid-cell--two, .projects__grid-cell--four {
  -webkit-transform: translateY(50%);
          transform: translateY(50%);
}

.projects__caption {
  position: absolute;
  bottom: 0;
  left: 0;
  padding: 30px 3em;
  width: 100%;
  height: 100%;
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.projects__caption::before {
  content: '';
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
  position: absolute;
  top: 30px;
  right: 100%;
  bottom: 30px;
  left: 30px;
  border-right: 4px solid rgba(255, 255, 255, 0.8);
  background-color: rgba(255, 255, 255, 0.5);
  -webkit-transition-delay: 600ms;
          transition-delay: 600ms;
  opacity: 0;
}

.projects__link {
  display: block;
  /*position: relative;
        z-index: 19500;*/
}

.projects__image {
  width: 100%;
  height: auto;
  display: block;
  -webkit-transition: all 0.5s ease-out;
  transition: all 0.5s ease-out;
}

.form-wrapper {
  margin: 4em auto 4em auto;
  max-width: 1280px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media (max-width: 52.5em) {
  .form-wrapper {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.contact {
  padding: 24rem 2rem 10rem 2rem;
}

@media (max-width: 25em) {
  .contact {
    padding: 5em 0;
  }
}

.contact__heading {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  color: #020203;
  text-transform: uppercase;
  padding: 1rem 4rem 2rem 0;
  background-image: url(../img/brush.png);
  background-repeat: no-repeat;
  background-position: left bottom;
  margin-bottom: 10rem;
}

.contact__heading-one {
  display: block;
  font-weight: 700;
  position: relative;
}

.contact__heading-two {
  display: block;
  font-weight: 200;
  position: relative;
}

.contacts {
  background-color: #221f2d;
  color: #fff;
  padding: 1.25em;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.contact-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%;
}

@media (max-width: 52.5em) {
  .contact-wrap {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
  }
}

@media (max-width: 23.0625em) {
  .contact-wrap {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

.wrappy--one {
  margin-bottom: auto;
}

@media (max-width: 52.5em) {
  .wrappy--one {
    margin-right: auto;
    margin-bottom: 0;
  }
}

@media (max-width: 23.0625em) {
  .wrappy--one {
    margin-bottom: 3em;
    margin-right: 0;
  }
}

.contact-hdg {
  margin-bottom: .3em;
  text-transform: uppercase;
  font-weight: 300;
  font-size: 1.2em;
}

.contact-icon {
  fill: #6cc0e4;
  padding-right: .1em;
  width: 1.2em;
  height: 1.2em;
  -webkit-transform: translateY(0.2em);
          transform: translateY(0.2em);
}

.contact-hdg-span {
  font-weight: 700;
  font-size: .915em;
}

@media (max-width: 55.625em) {
  .contact-item {
    font-size: .95em;
  }
}

@media (max-width: 23.0625em) {
  .contact-item {
    font-size: 1em;
  }
}

.contact-item + .contact-item {
  margin-top: .3em;
}

/* Fix for iphone safari browser showing blue text */
.contact-item--gray {
  color: #fff;
}

.contact-item.hours {
  color: #6cc0e4;
  margin-top: 0;
  margin-bottom: .3em;
}

.contact-item.hours:not(:last-of-type) {
  margin-bottom: .75em;
}

.form {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.4)), to(rgba(0, 0, 0, 0.4))), url("../img/brush.png");
  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("../img/brush.png");
  background-size: cover;
  padding: 4em 1.5em;
  -webkit-box-flex: 4;
      -ms-flex: 4;
          flex: 4;
}

@media (max-width: 28.125em) {
  .form {
    padding: 2em .75em;
  }
}

form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1em;
  padding-top: 3em;
}

.full-width:last-of-type {
  justify-self: center;
}

.field-text input,
.field-text textarea,
.submit {
  width: 100%;
  border-radius: 0 .25em .25em 0;
  padding: .375em;
  border: 1px solid #ccc;
  font: inherit;
  color: inherit;
}

.field-text input {
  height: 2.125em;
}

.field-text input:focus,
.field-text textarea:focus {
  outline: none;
  -webkit-box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
          box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
}

form label {
  display: block;
  color: #fff;
}

.field-prefixed {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.field-prefix {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 2.2em;
          flex: 0 0 2.2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #ccc;
  border-right: 0;
  border-radius: .25em 0 0 .25em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: .375em;
  color: #fff;
  background-color: #221f2d;
  -webkit-transition: background-color 300ms ease-out 100ms;
  transition: background-color 300ms ease-out 100ms;
}

.field-prefix.background-color {
  background-color: #333;
}

.form-icon {
  width: 1em;
  height: 1em;
  fill: #fff;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

form p {
  margin: 0;
}

textarea {
  height: 8em;
  resize: none;
}

/* changed from 1 / 3 because otherwise there will ALWAYS be two columns*/
.full-width {
  grid-column: 1 / -1;
}

@media (max-width: 35em) {
  .field-text {
    grid-column: 1 / -1;
  }
}

.full-width:last-of-type {
  justify-self: center;
}

.submit {
  margin-top: 2em;
  padding: .6em 1.2em;
  color: #fff;
  border-radius: 6px;
  border: 0;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#38344b), to(#262433));
  background-image: linear-gradient(#38344b, #262433);
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
}

.submit:hover {
  cursor: pointer;
}

.submit:focus {
  outline: none;
}

.submit:active {
  -webkit-box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
          box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
  outline: none;
  -webkit-transform: translate(1px, 1px);
          transform: translate(1px, 1px);
}

.submit span {
  margin: 0 .3em .2em 0;
}

.submit .form-icon {
  -webkit-transform: translateY(2px);
          transform: translateY(2px);
}

.footer {
  padding: 200px 0;
  background-color: #38344b;
}

.footer__wrap {
  max-width: 1280px;
  margin: 0 auto;
}

.js-btt-btn {
  position: fixed;
  bottom: -2.7em;
  right: .5em;
  width: 1.7em;
  height: 1.7em;
  border-radius: 50%;
  border: none;
  background-color: rgba(26, 33, 45, 0.8);
  text-align: center;
  line-height: 1.7em;
  color: #fff;
  font-size: 2em;
  opacity: 0;
  pointer-events: none;
  -webkit-transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  cursor: pointer;
  z-index: 9500;
}

.js-btt-btn:hover .js-btt-btn-icon {
  fill: #6cc0e4;
}

.js-btt-btn-icon {
  width: 1em;
  height: 1em;
  fill: #fff;
  -webkit-transform: translateY(5px);
          transform: translateY(5px);
  -webkit-transition: fill 300ms ease-in;
  transition: fill 300ms ease-in;
}

.js-btt-btn.active {
  opacity: 1;
  bottom: 2.3em;
  pointer-events: auto;
}

.js-btt-btn:hover {
  background-color: black;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
